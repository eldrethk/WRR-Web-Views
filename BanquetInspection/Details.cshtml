@model WRR.Areas.Maintenance.Models.InspectionBanquetViewModel
@using WRR.Extensions;
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Banquet Inspection</h2>
<hr />
<div class="row m-2 justify-content-center">
    <h2 class="text-center text-success">Banquet : @Html.DisplayFor(x => x.Inspection.BanquetName)</h2>
</div>
<div class="row m-2 justify-content-center">
    <h2 class="text-center text-dark">Building : @Html.DisplayFor(x => x.Inspection.Building)</h2>
</div>
<div class="row m-2 justify-content-center">
    <h2 class="text-center">Inspection Done By : @Html.DisplayFor(x => x.Inspection.UserID) </h2>
</div>
<div class="row m-2 justify-content-center h5">
    @Model.Inspection.CreatedDate.ToString("dddd MMM dd, yyyy h:mm:ss tt")
</div>

<br />

@using (Html.BeginForm("GoCategory", "BanquetInspection", FormMethod.Post))
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary(true, "", new { @class = "text-danger text-center" })
    <div class="row m-2 pb-3 justify-content-center noprint">
        <div class="form-row">
            @Html.HiddenFor(x => x.InspectionID)
            @Html.HiddenFor(x => x.CategoryIndex)
            <div class="col-auto">
                @Html.EnumDropDownListFor(model => model.CategoryViewEnum.BanquetCategories, "---Select Category---", htmlAttributes: new { @class = "custom-select" })
            </div>
            <div class="col-auto my-auto">
                <input type="submit" value="Go" class="btn btn-primary" />
            </div>
        </div>
    </div>

}

<h1 class="text-primary">@Model.SelectedCategoryName</h1>

<table class="table table-responsive-sm">
    @if (Enumerable.Count(Model.Ratings) > 0)
    {
        foreach (var cat in Model.categories)
        {
            var rate = @Model.Ratings.Find(y => y.CategoryID == cat.CategoryID).Rating;
            <tr>
                <td style="max-width:300px;"><strong>@Html.DisplayFor(x => cat.Title)</strong> - @Html.DisplayFor(x => cat.Description)</td>
                <td class="text-left">
                    @if (rate == 1)
                    {<b class="text-success">1 - Normal</b>}
                    else if (rate == 2)
                    { <b class="text-secondary">2 - Routine</b>}
                    else if (rate == 3)
                    {<b class="text-warning">3 - Repairs</b> }
                    else if (rate == 4)
                    {<b class="text-danger">4 - Urgent</b>}
                </td>

            </tr>

        }
    }
    else
    {
        <tr><td colspan="2" class="text-center text-danger font-weight-bold">This Category has no ratings.</td></tr>
    }
</table>

<h4 class="text-primary pt-2 noprint">Comments</h4>
<hr class="noprint" />
@if (Enumerable.Count(Model.comments) > 0)
{

    foreach (var item in Model.comments)
    {
        <div class="card border-dark mb-3">
            <div class="card-header bg-secondary text-white">Comment by : @Html.DisplayFor(x => item.UserID) - @item.CreatedDate.ToString("dddd MMM dd, yyyy h:mm:ss tt")</div>
            <div class="card-body">
                <p class="card-text">@Html.DisplayFor(x => item.Comment)</p>
            </div>
        </div>

    }
}
else
{ <div class="alert alert-warning">No Comments</div>}

@using (Html.BeginForm("AddComment", "BanquetInspection", FormMethod.Post))
{
    @Html.AntiForgeryToken();
    @Html.HiddenFor(x => x.InspectionID)
    @Html.HiddenFor(x => x.SelectedCategory)
    @Html.HiddenFor(x => x.CategoryIndex)
    <div class="form-group noprint">
        @Html.Label("Additional Comments", htmlAttributes: new { @class = "control-label col-md-4 p-0" })
        <div class="col-md-12 p-0">
            @Html.TextAreaFor(model => model.Comment, htmlAttributes: new { @class = "responive-textarea" })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row m-2 justify-content-center noprint">
        <div class="form-row">
            <div class="col-auto">
                <input type="submit" value="Add Comment" class="btn btn-primary" />
            </div>

        </div>
    </div>
}

<h4 class="text-primary pt-2 noprint">Images</h4>
<hr class="noprint" />
@if (Enumerable.Count(Model.Images) > 0)
{
    <div class="row mb-2">
        @foreach (var item in Model.Images)
        {
            <div class="col-lg-3 col-md-5 p-2">
                <div class="p-2 viewmore-img-container">
                    <a class="anchorAdd simple-img" data-id='@item.ImageID'> @Html.ImageWithClass(item.ImageID.ToString(), string.Format("/Content/inspection-banquet-images/{0}", item.ImageName), item.ImageName, "w-100 rounded max-height-350")</a>
                    <a class="anchorAdd zoom-icon" data-id="@item.ImageID"><span class="fas fa-expand fa-3x"></span></a>
                </div>
            </div>
        }


    </div>
}
else
{<div class="alert alert-warning">No Images</div>}

<div id='addModal' class='modal' role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='addModalContent'></div>
        </div>
    </div>

</div>

<div class="row pt-4 m-2 justify-content-center noprint">
    <div class="form-row">
        <div class="col-auto">
            <button type="button" id="btnPrint" onclick="window.print();" class="btn btn-secondary btn-lg">Print</button>
        </div>
        <div class="col-auto">
            @Html.ActionLink("Next", "Details", new { id = Model.InspectionID, index = (Model.CategoryIndex + 1) }, htmlAttributes: new { @class = "btn btn-primary btn-lg" })

        </div>
        <div class="col-auto my-auto">
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

           $('.anchorAdd').click(function (e) {

                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');

                $.ajax({
                    type: "GET",
                    url: '@Url.Action("ViewImage", "BanquetInspection", new { area = "Maintenance" })',
                    contentType: "application/json; charset=utf-8",
                    data: { "Id": id },
                    datatype: "json",
                    success: function (data) {

                        $('#addModalContent').html(data);

                        $('#addModal').modal('show');

                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });

            });


    </script>
}