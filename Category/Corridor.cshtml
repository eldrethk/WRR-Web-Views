@model WRR.Areas.Maintenance.Models.CategoryViewModel
    @using WRR.Extensions;
@{
    ViewBag.Title = "Corridor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Corridor</h2>

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Category.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.CorridorCategories, htmlAttributes: new { @class = "custom-select" })
                @Html.ValidationMessageFor(model => model.Category.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row m-2 justify-content-center" style="max-width:80%;">
            <div class="form-row">
                <div class="col-auto">
                    <input type="submit" value="Create" class="btn btn-primary btn-lg" />
                </div>

            </div>
        </div>
    </div>


}



@foreach (var cat in Model.Corridorlist)
{
    
    <h3 class="text-primary">@HtmlHelperExtensions.GetDisplayName(Model.CorridorCategories, @cat)</h3>

    var catitems = Model.Categories.Where(x => x.CategoryName == cat);

    if (Enumerable.Count(catitems) > 0)
    {
        <table class="table table-responsive-sm">


            @foreach (var item in catitems)
            {
                <tr>
                    <td class="text-uppercase w-25">@Html.DisplayFor(x => item.Title)</td>
                    <td class="w-75">@Html.DisplayFor(x => item.Description)</td>
                    <td>@Html.ActionLink("Delete", "DeleteCorridor", new { id = item.CategoryID }, new { onclick = "return confirm('Are you sure you want to delete');" })</td>
                </tr>
            }
        </table>
    }
    else
    { <div class="alert alert-warning">No Results</div>}


}