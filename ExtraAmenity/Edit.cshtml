@model WRR.Models.AmenityViewModel

@using WRR.Models;

@using WRR.Extensions

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Model.Amenity.Description = HttpUtility.HtmlDecode(Model.Description);
}


@section HeadScript{

    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.16/dist/summernote-lite.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.16/dist/summernote-lite.min.js"></script>

}

<h2>Edit an Extra Amenity</h2>


@using (Html.BeginForm("Edit", "ExtraAmenity", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Amenity.AmenityID)
    @Html.HiddenFor(model => model.Amenity.HotelID)

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.Amenity.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amenity.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amenity.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amenity.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { @rows = "20", @ID = "summernote" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Amenity.ShortDescription, htmlAttributes: new { @Class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Amenity.ShortDescription, new { @rows = "8", @cols = "80" })<br />
            @Html.ValidationMessageFor(model => model.Amenity.ShortDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4 control-label">Amenity's Image:</div>
        <div class="col-md-10 pb-2">
            @Html.Image("AmenityImage", String.Format("/Content/amenity-images/{0}", Model.Amenity.PictureUrl), "", "200", "200")
            @Html.HiddenFor(model => model.Amenity.PictureUrl)
            <button class="btn btn-danger btn-sm anchorImgChange">Remove</button>
        </div>
        <div class="input-group mb-3 col-md-6">
            <div class="custom-file no-display">
                <input type="file" class="custom-file-input" id="file" name="postedfile">
                <label class="custom-file-label" for="file">Choose file</label>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amenity.AmenityRate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Amenity.AmenityRate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amenity.AmenityRate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amenity.Tax, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Amenity.Tax, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amenity.Tax, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Amenity.ViewOnRackRate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="custom-control custom-switch">
                @Html.RadioButtonFor(model => model.ViewOnRackRate, "true", htmlAttributes: new { @class = "custom-control-input", @id = "yes1" })
                @Html.Label("Yes", htmlAttributes: new { @class = "custom-control-label", @for = "yes1" })

            </div>
            <div class="custom-control custom-switch">
                @Html.RadioButtonFor(model => model.ViewOnRackRate, "false", htmlAttributes: new { @class = "custom-control-input", @id = "no1" })
                @Html.Label("No", htmlAttributes: new { @class = "custom-control-label", @for = "no1" })
            </div>
        </div>
    </div>




    <div class="form-group">
        <div class="col-md-4 control-label">Amenitiy Type:</div>
    </div>

    <div class="form-row">
        <div class="col-md-2">
            <div class="form-group form-padding-left">
                <div class="custom-control custom-switch">
                    @Html.RadioButtonFor(model => model.AmenityType, "PerDayPerPerson", new { onclick = "showDiscountType(this)", @class = "custom-control-input", @id = "pdpp" })
                    @Html.LabelFor(model => model.Amenity.PerDayPerPerson, htmlAttributes: new { @class = "custom-control-label", @for = "pdpp" })
                </div>
                <div class="custom-control custom-switch">
                    @Html.RadioButtonFor(model => model.AmenityType, "PerDay", new { onclick = "showDiscountType(this)", @class = "custom-control-input", @id = "pd" })
                    @Html.LabelFor(model => model.Amenity.PerDay, htmlAttributes: new { @class = "custom-control-label", @for = "pd" })
                </div>
                <div class="custom-control custom-switch">
                    @Html.RadioButtonFor(model => model.AmenityType, "PerNightStay", new { onclick = "showDiscountType(this)", @class = "custom-control-input", @id = "pns" })
                    @Html.LabelFor(model => model.Amenity.PerNightStay, htmlAttributes: new { @class = "custom-control-label", @for = "pns" })
                </div>
                <div class="custom-control custom-switch">
                    @Html.RadioButtonFor(model => model.AmenityType, "OneTimeFee", new { onclick = "showDiscountType(this)", @class = "custom-control-input", @id = "otf", })
                    @Html.LabelFor(model => model.Amenity.OneTimeFee, htmlAttributes: new { @class = "custom-control-label", @for = "otf" })
                </div>
                <div class="custom-control custom-switch">
                    @Html.RadioButtonFor(model => model.AmenityType, "OneTimeFeePerson", new { onclick = "showDiscountType(this)", @class = "custom-control-input", @id = "otfp", })
                    @Html.LabelFor(model => model.Amenity.OneTimeFeePerson, htmlAttributes: new { @class = "custom-control-label", @for = "otfp" })
                </div>
                <div class="custom-control custom-switch">
                    @Html.RadioButtonFor(model => model.AmenityType, "Discount", new { onclick = "showDiscountType(this)", @class = "custom-control-input", @id = "dis", })
                    @Html.LabelFor(model => model.Amenity.Discount, htmlAttributes: new { @class = "custom-control-label", @for = "dis" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div id="discountcontainer" class='form-group @(Model.Amenity.Discount == true? "show-display" : "no-display")'>
                @Html.LabelFor(model => model.Amenity.DiscountRegularRate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amenity.DiscountRegularRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amenity.DiscountRegularRate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="w-50 mb-5">
        <ul class="list-group">
            <li class="list-group-item bg-secondary text-white">Packages associated: </li>
            @if ((Model.Packages != null))
            {
                foreach (var package in Model.Packages)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @Html.ActionLink(package.Name, "Details", "Packages", new { id = package.PackageID }, null)
                    </li>
                }
            }
            else
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    None
                </li>
            }
        </ul>
    </div>





    <div class="row m-2 justify-content-center" style="max-width:80%;">
        <div class="form-row">
            <div class="col-auto">
                <input type="submit" value="Save" class="btn btn-primary btn-lg" />
            </div>
            <div class="col-auto my-auto">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Content/FileSizeValidate.js"></script>

    <script type="text/javascript">
        $(function () {

            $('#summernote').summernote({
                height: 300
            });


        });

        $('.anchorImgChange').click(function (e) {
            e.preventDefault();
            $(".custom-file").removeClass("no-display").addClass("show-display");
        });

        function showDiscountType(discount) {
            var selected = discount.value;
            if (selected == "Discount") {
                $("#discountcontainer").addClass("show-display");
            }
            else {
                $("#discountcontainer").removeClass("show-display").addClass("no-display");
            }
        }

        $('#file').on('change',
            function () {
                //get the file name
                var fileName = $(this).val();
                //replace the "Choose a file" label
                $(this).next('.custom-file-label').html(fileName);
            })
    </script>
}
