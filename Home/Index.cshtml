@model WRR.Areas.Reserv.Models.SearchBookingViewModel

@using WRR.Extensions
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Reserv/Views/Shared/_ReservLayout.cshtml";
}




<div class="container rounded my-4 bg-gray-200 p-3">
    @using (Html.BeginForm("Rates", "Home", new { @ID = Model.Hotel.HotelID }, FormMethod.Post, null))
    {
        @Html.AntiForgeryToken()
        <div class="form-row align-items-end rounded bg-white p-3 round-border">

            <div class="form-group col-12 text-center p-1">
                <div>@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>
                <div>@Html.ValidationMessageFor(model => model.ArrivalDate, "", new { @class = "text-danger" })</div>
                <div>@Html.ValidationMessageFor(model => model.DepartureDate, "", new { @class = "text-danger" })</div>
                <div>@Html.ValidationMessageFor(model => model.Adults, "", new { @class = "text-danger" })</div>
                <div>@Html.ValidationMessageFor(model => model.Children, "", new { @class = "text-danger" })</div>
            </div>
            <div class="form-group col-md-3 col-sm-12">
                @Html.LabelFor(model => model.ArrivalDate)
                @Html.EditorFor(model => model.ArrivalDate, new { htmlAttributes = new { @class = "form-control", @id = "dt1" } })
            </div>
            <div class="form-group col-md-3 col-sm-12">
                @Html.LabelFor(model => model.DepartureDate)
                @Html.EditorFor(model => model.DepartureDate, new { htmlAttributes = new { @class = "date-picker2 form-control", @id = "dt2" } })
            </div>
            <div class="form-group col">
                @Html.LabelFor(model => model.Adults)
                @Html.DropDownListFor(model => model.Adults, Enumerable.Range(1, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), htmlAttributes: new { @class = "custom-select" })
            </div>
            <div class="form-group col">
                @Html.LabelFor(model => model.Children)
                @Html.DropDownListFor(model => model.Children, Enumerable.Range(0, 11).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), htmlAttributes: new { @class = "custom-select" })
            </div>
            <div class="form-group col text-center">

                <input type="submit" value="Search" class="btn btn-primary w-75" />
            </div>

        </div>
    }
</div>
<div id="CustomMsg" class="modal" role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">@Html.Raw(HttpUtility.HtmlDecode(ViewBag.CustomMsg))</div>

        </div>
    </div>

</div>

<div class="container rounded my-4 bg-gray-200 p-3">
    <h2>Our Accommodations</h2>
    @foreach (var room in Model.RoomTypes)
    {
        <div class="row bg-white rounded p-2 m-2 round-border">
            @if (room.MainImage.FileName != null)
            {
            <div class="col-md-4 viewmore-img-container">
                <a class="anchorAdd simple-img" data-id='@room.RoomType.RoomTypeID'>@Html.ImageWithClass("MainImage", String.Format("/Content/room-images/{0}", room.MainImage.FileName), room.MainImage.FileName, "w-100 rounded")</a>
                <a class="anchorAdd zoom-icon" data-id="@room.RoomType.RoomTypeID"><span class="fas fa-expand fa-3x"></span></a>
            </div>
            }
            <div class="col mt-2">
                <h4>@Html.DisplayFor(item => room.RoomType.Name)</h4>
                <p><span class="fa fa-user"></span> Sleeps @Html.DisplayFor(item => room.MaxGuest) <span class="pl-3 fa fa-bed"></span> @Html.DisplayFor(item => room.RoomType.BedType)</p>
                @if (room.RoomType.Description.Length > 150)
                {
                    <p>@Html.DisplayFor(item => room.RoomType.Description).ToString().Substring(0, 150))...</p>
                }
                else
                {
                    <p>@Html.DisplayFor(item => room.RoomType.Description)</p>
                }
                <p class="text-right"><button type="button" id="btnViewMore" class="anchorAdd btn btn-info" data-id='@room.RoomType.RoomTypeID'>View More</button></p>
            </div>
        </div>
    }
</div>

<div id='addModal' class='modal' role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='addModalContent'></div>
        </div>
    </div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $(document).ready(function () {
            var popup = @Session["PopupMsg"];
            if (popup == 0) {
                $("#CustomMsg").modal('show');
            }
        });

        $(function () {
            $("#dt1").datepicker({
                startDate: new Date('@Model.StartDate'),
                minDate: 0,
                autoclose:true
            });

            $('#dt1').datepicker().on('changeDate', function (date) {
                var dt1 = $('#dt1').datepicker('getDate');
                var dt2 = $('#dt2').datepicker('getDate');
                if (dt2 <= dt1) {
                    dt1.setDate(dt1.getDate() + 3);
                    $('#dt2').datepicker('setDate', dt1);
                }

            });

            $('#dt2').datepicker({
                startDate: new Date('@Model.StartDate'),
                minDate: 0,
                autoclose: true
            });

            $('#dt2').datepicker().on('changeDate', function (date) {
                var dt1 = $('#dt1').datepicker('getDate');
                var dt2 = $('#dt2').datepicker('getDate');
                if (dt2 <= dt1) {
                    alert("Departure Date has to be greater than Arrival Date");
                    dt2.setDate(dt2.getDate() - 3);
                    $('#dt1').datepicker('setDate', dt2);
                }
            });


           $('.anchorAdd').click(function (e) {

                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');

                $.ajax({
                    type: "GET",
                    url: '@Url.Action("ViewRoomDetail", "Home", new { area = "Reserv" })',
                    contentType: "application/json; charset=utf-8",
                    data: { "Id": id },
                    datatype: "json",
                    success: function (data) {

                        $('#addModalContent').html(data);

                        $('#addModal').modal('show');

                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });
            });
        });


    </script>
}

