@model WRR.Areas.Reserv.Models.SelectedPackageViewModel

@{
    ViewBag.Title = "Package";
    Layout = "~/Areas/Reserv/Views/Shared/_ReservLayout.cshtml";
}



<div class="container rounded my-4 bg-gray-200 p-3">
    <h2>Reserve your stay</h2>
    @using (Html.BeginForm("Package", "Reserv", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        decimal totalAddOns = 0;
        decimal allfees = Model.Rates.ExtraFees + Model.Rates.Taxes;
        <div class="text-center">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>
        <div class="row my-3">
            <div class="col-md-6 col-sm-12 h-100">
                <div class="bg-white rounded p-3 round-border mb-3">
                    <p class="w-100"><span class="h3 text-primary">Your Itinerary</span><span class="float-right">@Html.ActionLink("(Edit)", "Index", "Home", new { @id = Model.Hotel.HotelID }, null)</span></p>
                    <hr />
                    <h4>@ViewBag.PackageName</h4>
                    <p><i class="fas fa-calendar-alt text-secondary pr-2"></i> @Convert.ToDateTime(Model.ArrivalDate).ToString("ddd, MMM-dd-yyyy") - @Convert.ToDateTime(Model.DepartureDate).ToString("ddd, MMM-dd-yyyy")</p>
                    <p>
                        <i class="fas fa-user text-secondary pr-2"></i>@Html.DisplayFor(model => model.Adults) Adults @if (Model.Children > 0)
                        {<i class="fas fa-child text-secondary ml-3 mr-2"></i> @Html.DisplayFor(model => model.Children)<span> children</span>}
                    </p>
                    <p>
                        <i class="fa fa-bed text-secondary pr-2"></i> @ViewBag.RoomName &nbsp;
                        @if (Model.LowAllocation > 0)
                        {
                            <span class="badge badge-pill badge-danger">Only @Html.DisplayFor(model => model.LowAllocation) Left</span>
                        }
                    </p>
                    <hr />
                    @Html.HiddenFor(model => model.RoomTypeID)
                    @Html.HiddenFor(model => model.ArrivalDate)
                    @Html.HiddenFor(model => model.DepartureDate)
                    @Html.HiddenFor(model => model.Adults)
                    @Html.HiddenFor(model => model.PackageID)

                    @if (Model.Amenities == true && Model.CartAmenities.Count > 0)
                    {
                        <h4>Add-ons</h4>
                        <table class="w-100">
                            @foreach (var cart in Model.CartAmenities)
                            {
                                decimal cost = cart.Fee + cart.Tax;
                                totalAddOns += cost;
                                <tr>
                                    <td colspan="3">
                                        <p class="h5 text-info">@Html.DisplayFor(item => cart.AmenityName)</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @if (cart.Days > DateTime.MinValue)
                                        {
                                            <p>@cart.Days.ToString("ddd, MMM, d")</p>
                                        }
                                    </td>
                                    <td>
                                        @if (cart.NumOfPeople > 0)
                                        {
                                            <p>Qty. x @cart.NumOfPeople.ToString()</p>
                                        }
                                    </td>
                                    <td class="text-right pr-2">
                                        @if (cost == 0)
                                        {
                                            <p class="text-success">Included</p>
                                        }
                                        else
                                        {
                                            <p>@string.Format("{0:C}", (cost))</p>
                                        }
                                    </td>
                                </tr>
                            }
                        </table>
                        <hr />
                    }
                    <div class="p-2 rounded text-right font-weight-bold">
                        <p>Subtotal: $@Html.DisplayFor(model => model.Rates.SubTotal)</p>
                        @if (totalAddOns > 0)
                        {<p>Add-Ons: @string.Format("{0:C}", totalAddOns)</p>}

                        <p>Taxes & Fees: @string.Format("{0:C}", allfees)</p>
                        <p class="text-primary">Total: $@Html.DisplayFor(model => model.Rates.Total)</p>
                    </div>
                    <hr />
                    <p class="text-center text-success font-weight-bold pt-2">Deposit: $@Html.DisplayFor(model => model.Rates.Deposit)</p>
                </div>
            </div>

            <div class="col-md-6 col-sm-12 h-100">
                <div class="bg-white rounded p-3 h-100 round-border">
                    <h3>Personal Information</h3>
                    <hr />
                    <div class="row" style="display:none;">
                        <div class="col-xs-12">
                            <p class="customer-errors"></p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CusFirstName)
                                @Html.TextBoxFor(model => model.Reservation.CusFirstName, new { @class = "form-control", tabindex="1", @autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.Reservation.CusFirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CusLastName)
                                @Html.TextBoxFor(model => model.Reservation.CusLastName, new { @class = "form-control", tabindex = "2", @autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.Reservation.CusLastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CusAddress1)
                                @Html.TextBoxFor(model => model.Reservation.CusAddress1, new { @class = "form-control", tabindex = "3" })
                                @Html.ValidationMessageFor(model => model.Reservation.CusAddress1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CusAddress2)
                                @Html.TextBoxFor(model => model.Reservation.CusAddress2, new { @class = "form-control", tabindex = "4" })
                                @Html.ValidationMessageFor(model => model.Reservation.CusAddress2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-7 col-md-7">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CusCity)
                                @Html.TextBoxFor(model => model.Reservation.CusCity, new { @class = "form-control", tabindex = "5" })
                                @Html.ValidationMessageFor(model => model.Reservation.CusCity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-5 col-md-5 pull-right">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CusState)
                                @Html.TextBoxFor(model => model.Reservation.CusState, new { @class = "form-control", tabindex = "6" })
                                @Html.ValidationMessageFor(model => model.Reservation.CusState, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 col-md-4">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CusZip)
                                @Html.TextBoxFor(model => model.Reservation.CusZip, new { @class = "form-control", tabindex = "7" })
                                @Html.ValidationMessageFor(model => model.Reservation.CusZip, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-8 col-md-8 pull-right">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.SelectedCountry)
                                @Html.DropDownListFor(model => model.SelectedCountry, new SelectList(ViewBag.CountryList), new { @class = "form-control", tabindex = "8" })
                                @Html.ValidationMessageFor(model => model.SelectedCountry, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-7 col-md-7">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CusEmail)
                                @Html.TextBoxFor(model => model.Reservation.CusEmail, new { @class = "form-control", @type = "email", tabindex = "9", @autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.Reservation.CusEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-5 col-md-5 pull-right">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CusDayPhone)
                                @Html.TextBoxFor(model => model.Reservation.CusDayPhone, new { @class = "form-control", @type = "tel", tabindex = "10" })
                                @Html.ValidationMessageFor(model => model.Reservation.CusDayPhone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.Comments)
                                @Html.TextAreaFor(model => model.Reservation.Comments, new { @class = "form-control", @rows = 5, tabindex = "11" })
                                @Html.ValidationMessageFor(model => model.Reservation.Comments, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="custom-control custom-checkbox form-check-inline float-right">
                                @Html.CheckBoxFor(model => model.OptIns, htmlAttributes: new { @class = "custom-control-input", @id = "opt" })
                                @Html.Label("Send me future specials", htmlAttributes: new { @class = "custom-control-label", @for = "opt" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">

            <div class="col-md-6 col-sm-12 h-100">
                <div class="bg-white rounded p-3 round-border mb-3">
                    <h3>Terms & Conditions</h3>
                    <hr />
                    <div id="disclaimer-container">
                        @Html.Raw(HttpUtility.HtmlDecode(Model.Disclaimer.ToString()))
                    </div>
                    <div class="row py-3 h-100">

                        <div class="col-xs-2 col-md-2">
                            @Html.TextBoxFor(model => model.Reservation.UserInitals, new { @class = "form-control", tabindex = "16" })
                        </div>
                        <div class="col-xs-10 col-md-10 p-0 my-auto text-center">
                            <label>Enter your initials to accept the terms &amp; conditions</label>
                        </div>
                        <div class="text-center w-100">@Html.ValidationMessageFor(model => model.Reservation.UserInitals, "", new { @class = "text-danger" })</div>

                    </div>
                </div>
            </div>
            <div class="col-md-6 col-sm-12 h-100">
                <div class="bg-white rounded p-3 round-border">
                    <h3>Payment Information</h3>
                    <hr />

                    <div class="row" style="display:none;">
                        <div class="col-xs-12">
                            <p class="payment-errors"></p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CardHolderName)
                                @Html.TextBoxFor(model => model.Reservation.CardHolderName, new { @class = "form-control", @id = "nameofcard", tabindex = "12", @autocomplete="off" })
                                @Html.ValidationMessageFor(model => model.Reservation.CardHolderName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group" id="card-number-field">
                                @Html.LabelFor(model => model.Reservation.CardNumber, new { @for = "cardNumber" })
                                @Html.TextBoxFor(model => model.Reservation.CardNumber, new { @class = "form-control", @id = "cardNumber", @type = "tel", tabindex = "13", @autocomplete="off" })
                                @Html.ValidationMessageFor(model => model.Reservation.CardNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-7 col-md-7">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CardExpirationDate)
                                @Html.TextBoxFor(model => model.Reservation.CardExpirationDate, new { @placeholder = "MM / YY", @class = "form-control", @id = "expire", tabindex = "14", @autocomplete="off" })
                                @Html.ValidationMessageFor(model => model.Reservation.CardExpirationDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-5 col-md-5 pull-right">
                            <div class="form-group">
                                @Html.DisplayNameFor(model => model.Reservation.CardSecureCode)
                                @Html.TextBoxFor(model => model.Reservation.CardSecureCode, new { @placeholder = "CVC", @class = "form-control", @id = "cvv", @autocomplete = "off", tabindex = "15" })
                                @Html.ValidationMessageFor(model => model.Reservation.CardSecureCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="mx-auto" id="credit_cards">
                            @if (Model.PaymentType.Visa == true)
                            {
                                <img src="~/Content/payment-images/visa.png" id="visa" class="creditcardimg">
                            }
                            @if (Model.PaymentType.MasterCard == true)
                            {
                                <img src="~/Content/payment-images/mastercard.png" id="mastercard" class="creditcardimg">
                            }
                            @if (Model.PaymentType.Amex == true)
                            {
                                <img src="~/Content/payment-images/Amex.png" id="amex" class="creditcardimg">
                            }
                            @if (Model.PaymentType.Discover == true)
                            {
                                <img src="~/Content/payment-images/discover.png" id="discover" class="creditcardimg" />
                            }
                            @if (Model.PaymentType.DinersClub == true)
                            {
                                <img src="~/Content/payment-images/Dinerclub.png" id="diner" class="creditcardimg" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row p-3">
            <div class="col-12 text-center">
                <input type="submit" value="Book" class="btn btn-primary btn-lg" />
            </div>
        </div>
    }
</div>


@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery.payform.min.js" charset="utf-8"></script>

    <script>

        var owner = $('#nameofcard'),
            cardNumber = $('#cardNumber'),
            cardNumberField = $('#card-number-field'),
            securenum = $('#expire'),
            CVV = $("#cvv"),
            mastercard = $("#mastercard"),
            visa = $("#visa"),
            discover = $("#discover"),
            diner = $("#diner"),
                amex = $("#amex");


        cardNumber.payform('formatCardNumber');
        CVV.payform('formatCardCVC');
        securenum.payform('formatCardExpiry');

        cardNumber.keyup(function () {
            amex.removeClass('transparent');
            visa.removeClass('transparent');
            mastercard.removeClass('transparent');
            discover.removeClass('transparent');
            diner.removeClass('transparent');

            if ($.payform.validateCardNumber(cardNumber.val()) == false) {
                cardNumberField.removeClass('has-success');
                cardNumberField.addClass('has-error');
            } else {
                cardNumberField.removeClass('has-error');
                cardNumberField.addClass('has-success');
            }

            if ($.payform.parseCardType(cardNumber.val()) == 'visa') {
                mastercard.addClass('transparent');
                amex.addClass('transparent');
                discover.addClass('transparent');
                diner.addClass('transparent');
            } else if ($.payform.parseCardType(cardNumber.val()) == 'amex') {
                mastercard.addClass('transparent');
                visa.addClass('transparent');
                discover.addClass('transparent');
                diner.addClass('transparent');
            } else if ($.payform.parseCardType(cardNumber.val()) == 'mastercard') {
                amex.addClass('transparent');
                visa.addClass('transparent');
                discover.addClass('transparent');
                diner.addClass('transparent');
            } else if ($.payform.parseCardType(cardNumber.val()) == 'discover') {
                amex.addClass('transparent');
                visa.addClass('transparent');
                mastercard.addClass('transparent');
                diner.addClass('transparent');
            } else if ($.payform.parseCardType(cardNumber.val()) == 'dinersclub') {
                mastercard.addClass('transparent');
                amex.addClass('transparent');
                visa.addClass('transparent');
                discover.addClass('transparent');
            }
        });

    </script>
}


