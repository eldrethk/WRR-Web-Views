@model WRR.Areas.Reserv.Models.SpecialsPageViewModel

@using WRR.Extensions
@{
    ViewBag.Title = "Special";
    Layout = "~/Areas/Reserv/Views/Shared/_ReservLayout.cshtml";
}


<div class="container rounded my-4 bg-gray-200 p-3">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-row align-items-end rounded bg-white p-2 round-border">

            <div class="form-group col-12 text-center p-1">
                <div>@Html.ValidationSummary(true, "", new { @class="text-danger"}) </div>
                <div>@Html.ValidationMessageFor(model => model.Search.ArrivalDate, "", new { @class = "text-danger" })</div>
                <div>@Html.ValidationMessageFor(model => model.Search.DepartureDate, "", new { @class = "text-danger" })</div>
                <div>@Html.ValidationMessageFor(model => model.Search.Adults, "", new { @class = "text-danger" })</div>
                <div>@Html.ValidationMessageFor(model => model.Search.Children, "", new { @class = "text-danger" })</div>
            </div>
            <div class="form-group col-md-3 col-sm-12">
                @Html.LabelFor(model => model.Search.ArrivalDate)
                @Html.EditorFor(model => model.Search.ArrivalDate, new { htmlAttributes = new { @class = "form-control", @id = "dt1" } })
            </div>
            <div class="form-group col-md-3 col-sm-12">
                @Html.LabelFor(model => model.Search.DepartureDate)
                @Html.EditorFor(model => model.Search.DepartureDate, new { htmlAttributes = new { @class = "date-picker2 form-control", @id = "dt2" } })
            </div>
            <div class="form-group col">
                @Html.LabelFor(model => model.Search.Adults)
                @Html.DropDownListFor(model => model.Search.Adults, Enumerable.Range(1, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), htmlAttributes: new { @class = "custom-select" })
            </div>
            <div class="form-group col">
                @Html.LabelFor(model => model.Search.Children)
                @Html.DropDownListFor(model => model.Search.Children, Enumerable.Range(0, 11).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), htmlAttributes: new { @class = "custom-select" })
            </div>
            <div class="form-group col text-center">

                <input type="submit" value="Search" class="btn btn-primary w-75" />
            </div>

        </div>

    }
</div>

<div class="container rounded my-4 bg-gray-200 p-3">
    <div class="rounded bg-white p-3 my-4 mx-2 round-border">
        @Html.HiddenFor(model => model.SelectedPackage.ValidFrom)
        @Html.HiddenFor(model => model.SelectedPackage.ValidtTo)
        @Html.HiddenFor(model => model.SelectedPackage.MinDays)
        
 
        <h4 class="text-primary">@Html.DisplayFor(model => model.SelectedPackage.Name)</h4>
        <p><strong>Valid Dates: </strong>@Convert.ToDateTime(Model.SelectedPackage.ValidFrom).ToString("ddd, MMM-dd-yyyy") - @Convert.ToDateTime(Model.SelectedPackage.ValidtTo).ToString("ddd, MMM-dd-yyyy")</p>
        <p>
            <strong>Arrival Day: </strong>
            @if (Model.SelectedPackage.ArrMon == true && Model.SelectedPackage.ArrTues == true && Model.SelectedPackage.ArrWed == true && Model.SelectedPackage.ArrThurs == true && Model.SelectedPackage.ArrFri == true && Model.SelectedPackage.ArrSat == true && Model.SelectedPackage.ArrSun == true)
            {<span>Any day of the week</span>}
            else
            {

                List<string> listofDays = new List<string>();
                if (Model.SelectedPackage.ArrMon == true)
                { listofDays.Add("Mon"); }
                if (Model.SelectedPackage.ArrTues == true)
                { listofDays.Add("Tues"); }
                if (Model.SelectedPackage.ArrWed == true)
                { listofDays.Add("Weds"); }
                if (Model.SelectedPackage.ArrThurs == true)
                { listofDays.Add("Thurs"); }
                if (Model.SelectedPackage.ArrFri == true)
                { listofDays.Add("Fri"); }
                if (Model.SelectedPackage.ArrSat == true)
                { listofDays.Add("Sat"); }
                if (Model.SelectedPackage.ArrSun == true)
                { listofDays.Add("Sun"); }
                int last = listofDays.Count - 1;
                for (int i = 0; i <= last; i++)
                {
                    if (i == last)
                    {
                        <span>@listofDays[i].ToString()</span>
                        break;
                    }
                    else
                    {
                        <span>@listofDays[i].ToString() , </span>
                    }
                }
            }
        </p>
        <p><strong>Length of Stay: </strong>@Html.DisplayFor(model => model.SelectedPackage.MinDays) nights min / @Html.DisplayFor(model => model.SelectedPackage.MaxDays) nights max</p>
        @Html.Raw(HttpUtility.HtmlDecode(Model.SelectedPackage.Description))
    </div>
</div>

<div class="container rounded my-4 bg-gray-200 p-3">
    <h2>Our Accommodations</h2>
    @if (Model.Search.RoomTypes != null && Model.Search.RoomTypes.Count > 0)
    {
        foreach (var room in Model.Search.RoomTypes)
        {
            <div class="row rounded bg-white p-2 m-2 round-border">
                @if (room.MainImage.FileName != null)
                {
                <div class="col-md-4 viewmore-img-container">
                    <a class="anchorAdd simple-img" data-id='@room.RoomType.RoomTypeID'> @Html.ImageWithClass("RoomImg", String.Format("/Content/room-images/{0}", room.MainImage.FileName), room.MainImage.FileName, "w-100 rounded")</a>
                    <a class="anchorAdd zoom-icon" data-id="@room.RoomType.RoomTypeID"><span class="fas fa-expand fa-3x"></span></a>
                </div>
                }
                <div class="col mt-2">
                    <h4>@Html.DisplayFor(item => room.RoomType.Name)</h4>
                    <p><span class="fa fa-user"></span> Sleeps @Html.DisplayFor(item => room.MaxGuest) <span class="pl-3 fa fa-bed"></span> @Html.DisplayFor(item => room.RoomType.BedType)</p>
                    @if (room.RoomType.Description.Length > 150)
                    {
                        <p>@Html.DisplayFor(item => room.RoomType.Description).ToString().Substring(0, 150))...</p>
                    }
                    else
                    {
                        <p>@Html.DisplayFor(item => room.RoomType.Description)</p>
                    }
                    <p class="text-right"><button type="button" id="btnViewMore" class="anchorAdd btn btn-info" data-id='@room.RoomType.RoomTypeID'>Room Details</button></p>

                </div>
            </div> 
        }
    }
</div>

<div id='addModal' class='modal' role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='addModalContent'></div>
        </div>
    </div>

</div>

    @section Scripts{
        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript">
            var validfrom = $('#SelectedPackage_ValidFrom').val();
            var validto = $('#SelectedPackage_ValidtTo').val();
            var min = $('#SelectedPackage_MinDays').val();
          
            

            var startdte = validfrom;
            var today = new Date();
            if (startdte < today) {
                startdte = today;
            }
                      
            $("#dt1").datepicker({
                startDate: new Date('@Model.Search.ArrivalDate'),            
                endDate: new Date(validto),
                autoclose: true,
                beforeShowDay: my_check
            });

            Date.prototype.addDays = function (days) {
                var date = new Date(this.valueOf());
                date.setDate(date.getDate() + days);
                return date;
            }

            function my_check(in_date) {
                if (in_date.getDay() == 0 && '@Model.SelectedPackage.ArrSun' == 'False') {
                    return false;
                }            
                else if (in_date.getDay() == 1 && '@Model.SelectedPackage.ArrMon' == 'False') {
                    return false;
                }
                else if (in_date.getDay() == 2 && '@Model.SelectedPackage.ArrTues' == 'False') {
                    return false;
                }
                else if (in_date.getDay() == 3 && '@Model.SelectedPackage.ArrWed' == 'False') {
                    return false;
                }
                else if (in_date.getDay() == 4 && '@Model.SelectedPackage.ArrThurs' == 'False') {
                    return false;
                }
                else if (in_date.getDay() == 5 && '@Model.SelectedPackage.ArrFri' == 'False') {
                    return false;
                }
                else if (in_date.getDay() == 6 && '@Model.SelectedPackage.ArrSat' == 'False') {
                    return false;
                }
                else {
                    return true;
                }
            } 


            $('#dt1').datepicker().on('changeDate', function (date) {
                var dt1 = $('#dt1').datepicker('getDate');
                var dt2 = $('#dt2').datepicker('getDate');              
                var selectdate = new Date(dt1);             
             
                var mindate = selectdate.addDays(parseInt(min));           
                        
                if (dt2 < mindate) {                    
                    dt1.setDate(dt1.getDate());
                    $('#dt2').datepicker('setDate', mindate);                   
                }

            });

            $('#dt2').datepicker({
                startDate: new Date('@Model.Search.ArrivalDate'),
                endDate: new Date(validto),
                autoclose: true
            });

            $('#dt2').datepicker().on('changeDate', function (date) {
                var dt1 = $('#dt1').datepicker('getDate');
                var dt2 = $('#dt2').datepicker('getDate');
                if (dt2 <= dt1) {
                    //alert("Departure Date has to be greater than Arrival Date");
                    dt2.setDate(dt2.getDate() - min);
                    $('#dt1').datepicker('setDate', dt2);
                }
            });

            $(function () {
          
                $('.anchorAdd').click(function (e) {

                    var $buttonClicked = $(this);
                    var id = $buttonClicked.attr('data-id');
                   
                    
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("ViewRoomDetail", "Specials", new { area = "Reserv" })',
                        contentType: "application/json; charset=utf-8",
                        data: { "Id": id },
                        datatype: "json",
                        success: function (data) {
                        
                            $('#addModalContent').html(data);

                            $('#addModal').modal('show');

                        },
                        error: function () {
                            alert("Dynamic content load failed.");
                        }
                    });
                });
        });

        </script>
    }

